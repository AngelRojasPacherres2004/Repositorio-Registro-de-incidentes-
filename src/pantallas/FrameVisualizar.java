/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pantallas;
import Entidades.Incidente;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author Proyector
 */
public class FrameVisualizar extends javax.swing.JFrame {

  private FrameLogin padre; 
private List<Incidente> incidentes; 
//public static List<Incidente> listaDeIncidente;
private DefaultListModel<String> modeloListIncidentes;
    /**
     * Creates new form JframeIncidentes
     */
    public FrameVisualizar() {
        initComponents();
    }
public FrameVisualizar(FrameLogin padre){
      initComponents();
      this.padre = padre;
      modeloListIncidentes = new DefaultListModel<>();
        lstIncidente.setModel(modeloListIncidentes);
        // Inicializar la lista de incidentes
        incidentes = new ArrayList<>();
      //this.txtTipo.setText(incidente.getIncidente().getDatosMostrar());
//  
      }
                  

                                     

                                      

         
         
         
         
         
         
         
         
         
         
         
    
          
         
         
    
    
    
    private void llamarPantallaEdicion(Incidente incidente){
    
    FrameRegistrar PantallaEstudiante = new FrameRegistrar(this,incidente );
    PantallaEstudiante.setLocationRelativeTo(null);
    PantallaEstudiante.setVisible(true);
    this.setVisible(false);
    
    }
    
    
    
    
         
         
   
                                   

                                       

                                

    private void lstIncidenteMouseClicked(java.awt.event.MouseEvent evt) {                                          
        // TODO add your handling code here:
        if(evt.getClickCount()>1){
        //Incidente paciente = incidentes.get(lstIncidente.getSelectedIndex());
        //this.padre.setIncidente(paciente);
        //salir();
        
      FrameRegistrar Incidente = new FrameRegistrar(this,incidentes.get(lstIncidente.getSelectedIndex()));
        Incidente.setLocationRelativeTo(null);
        Incidente.setVisible(true);
        this.setVisible(false);
        
        
        
        
        
        
    }                                         

    }
//public void setIncidente(Incidente incidente){
//    
//    this.pacienteSelecionado = incidente; 
//    txtPaciente.setText(incidente.getDatosMostrar());
//    
//    }
private void salir(){
      padre.setVisible(true);
      this.dispose();
    }

 public void agregarEstudiante(Incidente incidente){//va a recibir un estudiante
         /*A mi lista de estudiante (le agrego el estudiante)
         una vez que lo agregue a mi modelo , falta agregarlo al list view*/
        incidentes.add(incidente);
        modeloListIncidentes.addElement(incidente.getDatosMostrar());//Get texto me devuelve el apellido y nombre
        lstIncidente.setModel(modeloListIncidentes);
     } 
 
public void agregarNuevoPaciente(Incidente incidente){
       incidentes.add(incidente);
        buscar("");
    }

private void buscar(String criterio){
        this.modeloListIncidentes.removeAllElements();
        
        for(Incidente incidente : incidentes){ 
            if(incidente.getTipo() != null && incidente.getTipo().contains(criterio)){
                this.modeloListIncidentes.addElement(incidente.getDatosMostrar());
            }
        }    
    }

 private void volverACargarCitas (String criterio){
        
        modeloListIncidentes.removeAllElements();
        for(Incidente paciente:incidentes){
        if(paciente.getTipo().contains(criterio)){
        
        modeloListIncidentes.addElement(paciente.getDatosMostrar());
            
        }
        
        }
    }

 public void actualizarEstudiante(Incidente incidente) {
    // Encuentra el índice del estudiante en la lista y actualiza su información.
    int index = incidentes.indexOf(incidente);
    if (index != -1) {
        incidentes.set(index, incidente);
        modeloListIncidentes.set(index, incidente.getDatosMostrar());
        
        
    }
}

public void agregarNuevoIncidente(Incidente incidente) {
        incidentes.add(incidente);
        // Actualizar el modelo de la lista
        modeloListIncidentes.addElement(incidente.getDatosMostrar());
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblEliminar = new javax.swing.JLabel();
        lblAgregar = new javax.swing.JLabel();
        lblEditar = new javax.swing.JLabel();
        lblRiesgo = new javax.swing.JLabel();
        lblSalir = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstIncidente = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Elimina.png"))); // NOI18N
        lblEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblEliminarMouseClicked(evt);
            }
        });
        jPanel1.add(lblEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 430, 150, 50));

        lblAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Agrega.png"))); // NOI18N
        lblAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAgregarMouseClicked(evt);
            }
        });
        jPanel1.add(lblAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 430, 150, 50));

        lblEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Editar.png"))); // NOI18N
        lblEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblEditarMouseClicked(evt);
            }
        });
        jPanel1.add(lblEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 430, 150, 50));

        lblRiesgo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Evaluacion.png"))); // NOI18N
        lblRiesgo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblRiesgo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRiesgoMouseClicked(evt);
            }
        });
        jPanel1.add(lblRiesgo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 430, 160, 50));

        lblSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Salir.png"))); // NOI18N
        lblSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSalirMouseClicked(evt);
            }
        });
        jPanel1.add(lblSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 140, -1));

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lstIncidente.setBackground(new java.awt.Color(53, 170, 255));
        lstIncidente.setBorder(null);
        lstIncidente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lstIncidente.setForeground(new java.awt.Color(255, 255, 255));
        lstIncidente.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstIncidente);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 240));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 530, 260));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Registro.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 490));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSalirMouseClicked
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_lblSalirMouseClicked

    private void lblRiesgoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRiesgoMouseClicked
        // TODO add your handling code here:
         ZonadeRiesgo pantallaRegistro = new ZonadeRiesgo(this);   
        pantallaRegistro.setLocationRelativeTo(this);
        pantallaRegistro.setVisible(true);
        
        
        this.setVisible(false);
    }//GEN-LAST:event_lblRiesgoMouseClicked

    private void lblAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAgregarMouseClicked
        // TODO add your handling code here:
        FrameRegistrar pantallaRegistro = new FrameRegistrar(this); 
        pantallaRegistro.setLocationRelativeTo(this);
        pantallaRegistro.setVisible(true);
        
        
        
        this.setVisible(false);
    }//GEN-LAST:event_lblAgregarMouseClicked

    private void lblEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEditarMouseClicked
        // TODO add your handling code here:
         int index = lstIncidente.getSelectedIndex();
         if (index != -1) {
        Incidente estudiante = incidentes.get(index);
        llamarPantallaEdicion(estudiante);
       
        
        
        this.setVisible(false);
    }//GEN-LAST:event_lblEditarMouseClicked
    }
    private void lblEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblEliminarMouseClicked
        // TODO add your handling code here:
            FrameIncidenteEliminado pantallaRegistro = new FrameIncidenteEliminado(this); 
        pantallaRegistro.setLocationRelativeTo(this);
        pantallaRegistro.setVisible(true);
        
        
        
      
        int selectedIndex = lstIncidente.getSelectedIndex();
    if (selectedIndex != -1) {
        // Obtén el estudiante seleccionado
        Incidente estudiante = incidentes.get(selectedIndex);

        // Elimina el estudiante tanto del modelo como de la lista de estudiantes
        modeloListIncidentes.remove(selectedIndex);
        incidentes.remove(selectedIndex);

        // Actualiza el modelo del JList
        lstIncidente.setModel(modeloListIncidentes);
        
    }       
     
        
        
        this.setVisible(false);
    }//GEN-LAST:event_lblEliminarMouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameVisualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameVisualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameVisualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameVisualizar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameVisualizar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAgregar;
    private javax.swing.JLabel lblEditar;
    private javax.swing.JLabel lblEliminar;
    private javax.swing.JLabel lblRiesgo;
    private javax.swing.JLabel lblSalir;
    private javax.swing.JList<String> lstIncidente;
    // End of variables declaration//GEN-END:variables
}
